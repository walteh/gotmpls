// Code generated by lsproto-gen. DO NOT EDIT.

package lsproto

import (
	"encoding/json"
	"fmt"

	"gitlab.com/tozd/go/errors"
)

// Document URI type (string)
//
// ┌──────────────────────────────────────────────────────────────┐
// │ DocumentURI                                                  │
// └──────────────────────────────────────────────────────────────┘
//

// Unsigned integer type
//
// ┌──────────────────────────────────────────────────────────────┐
// │ Uint                                                         │
// └──────────────────────────────────────────────────────────────┘
//

// Reference to Position
//
// ┌──────────────────────────────────────────────────────────────┐
// │ Position                                                     │
// └──────────────────────────────────────────────────────────────┘
//

// Position represents a type in the LSP protocol.
type Position struct {
	Line uint `json:"line" yaml:"line" mapstructure:"line"` // Line position in a document (zero-based).
	Character uint `json:"character" yaml:"character" mapstructure:"character"` // Character offset on a line in a document (zero-based).
}

// Reference to Range
//
// ┌──────────────────────────────────────────────────────────────┐
// │ Range                                                        │
// └──────────────────────────────────────────────────────────────┘
//

// Range represents a type in the LSP protocol.
type Range struct {
	Start Position `json:"start" yaml:"start" mapstructure:"start"` // The range's start position.
	End Position `json:"end" yaml:"end" mapstructure:"end"` // The range's end position.
}

// Represents a location inside a resource, such as a line inside a text file.
//
// ┌──────────────────────────────────────────────────────────────┐
// │ Definition                                                   │
// └──────────────────────────────────────────────────────────────┘
//

// Definition represents a type in the LSP protocol.
type Definition struct {
	Uri string `json:"uri" yaml:"uri" mapstructure:"uri"` // Document URI.
	Range Range `json:"range" yaml:"range" mapstructure:"range"` // The range within the document.
}

// Information about where a symbol is defined.
//
// ┌──────────────────────────────────────────────────────────────┐
// │ DefinitionLink                                               │
// └──────────────────────────────────────────────────────────────┘
//

// DefinitionLink represents a type in the LSP protocol.
type DefinitionLink struct {
	TargetUri string `json:"targetUri" yaml:"targetUri" mapstructure:"targetUri"` // The target resource identifier of this link.
	TargetRange Range `json:"targetRange" yaml:"targetRange" mapstructure:"targetRange"` // The full target range of this link.
	TargetSelectionRange Range `json:"targetSelectionRange" yaml:"targetSelectionRange" mapstructure:"targetSelectionRange"` // The range that should be selected and revealed when this link is being followed.
}

