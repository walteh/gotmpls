# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

vars:
    GO_MODULES:
        sh: cat go.work | grep -oEh  '\t+(\./*[^[:space:]]*)' | tr -d '\t'

includes:
    tool:
        optional: true
        taskfile: "./gen/taskfiles/Taskfile.tools.yml"
    script:
        optional: true
        taskfile: "./gen/taskfiles/Taskfile.scripts.yml"

tasks:
    generate-taskfiles:
        run: once
        env:
            {
                OUTPUT_DIR: "./out",
                SCRIPTS_DIR: "./scripts",
                TASKFILE_OUTPUT_DIR: "./gen/taskfiles",
            }
        cmds:
            - ./scripts/setup-tools-for-local.sh --generate-taskfiles --skip-build
        sources:
            - ./tools/**/*
            - ./scripts/**/*
        generates:
            - "./gen/taskfiles/**/*"

    local-setup-tools:
        run: once
        deps: [generate-taskfiles]
        env:
            {
                SCRIPTS_DIR: "./scripts",
                TASKFILE_OUTPUT_DIR: "./gen/taskfiles",
                TOOLS_OUTPUT_DIR: "./out/tools",
            }
        cmds:
            - ./scripts/setup-tools-for-local.sh
        sources:
            - ./tools/**/*
            - ./scripts/setup-tools-for-local.sh
            - ./scripts/build-tool.sh
            - go.work.sum
        generates:
            - ./out/tools/**/*

    mockery:
        cmds:
            - ./scripts/run-tool.sh mockery
            - find ./gen/mockery -type f -not -mmin -1 -delete
        generates:
            - ./gen/mockery/*.go
        sources:
            - ./**/*.go

    test:
        cmd: ./go test ./...
        env:
            MAX_LINES: '{{.MAX_LINES | default "1000"}}'

    test-all:
        cmd: ./go test -max-lines=all ./...

    install-executables:
        cmds:
            - go install ./cmd/gotmpls

    package-extension:
        dir: code-extension
        cmds:
            - rm -rf node_modules
            - rm -rf out
            - bun install
            - bun run package
            - mv ./retab-*.vsix ~/Downloads
            - open https://marketplace.visualstudio.com/manage/publishers/walteh

    rebuild-extension:
        deps:
            - install-executables
        dir: code-extension
        cmds:
            - rm -rf node_modules
            - rm -rf out
            - bun install
            - bun run build

    jsonschema-generate:
        run: once
        deps: [copyrc]
        cmds:
            - mkdir -p ./gen/jsonschema/go/tmlanguage ./gen/jsonschema/go/vscodemetamodel
            - ./scripts/run-tool.sh go-jsonschema ./gen/jsonschema/json/vscodemetamodel/metaModel.schema.json -o=./gen/jsonschema/go/vscodemetamodel -p=vscodemetamodel
            - ./scripts/run-tool.sh go-jsonschema ./gen/jsonschema/json/schemastore/tmlanguage.schema.json -o=./gen/jsonschema/go/tmlanguage -p=tmlanguage
        generates:
            - ./gen/jsonschema/go/*.go
        sources:
            - ./gen/jsonschemas/vscode/metaModel.schema.json
            - ./gen/jsonschemas/schemastore/tmlanguage.schema.json

    copyrc:
        desc: copyrc
        cmds:
            - ./scripts/run-tool.sh copyrc -config=.copyrc.hcl -force
        sources:
            - .copyrc.hcl
        generates:
            - "**/*.copyrc.lock"
        status:
            - ./scripts/run-tool.sh copyrc -config=.copyrc.hcl -status

    generate-lsp-protocol:
        deps: [copyrc]
        sources:
            - "./pkg/lsp/protocol/generator/*.go"
        generates:
            - "./pkg/lsp/protocol/*.gen.go"
        cmds:
            - go generate ./pkg/lsp/protocol/generator

    go-mod-tidy:
        env:
            {
                GOPROXY: https://proxy.golang.org,
                GOSUMDB: sum.golang.org,
                GOPRIVATE: github.com/walteh,
            }
        cmds:
            - for: { var: GO_MODULES }
              cmd: |
                  cd {{.ITEM}} && go mod tidy

    go-mod-upgrade:
        run: once
        deps: [local-setup-tools]
        env:
            {
                GOPROXY: https://proxy.golang.org,
                GOSUMDB: sum.golang.org,
                GOPRIVATE: github.com/walteh,
            }
        cmds:
            - ./scripts/run-tool.sh go-mod-upgrade --force

    sync-aliasrc:
        desc: sync aliasrc system
        cmds:
            - ./scripts/sync-aliasrc.sh
